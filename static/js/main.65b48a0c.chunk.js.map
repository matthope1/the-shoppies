{"version":3,"sources":["MovieSearchForm.js","Movie.js","MovieQueryResults.js","UserNominations.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["MovieSearchForm","props","className","onSubmit","handleSubmit","label","id","type","placeholder","onChange","handleChange","Movie","title","year","display","posterUrl","addNewNomination","onClick","disabled","removeNomination","MovieQueryResults","searchTerm","dataList","map","movie","i","Title","found","nList","length","err","console","log","Year","Poster","UserNominations","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","App","state","movieSearchInput","movieList","nominationList","user","handleInputSubmit","bind","handleInputChange","movieSearchQuery","writeUserData","anonSignIn","movieTitle","endPoint","fetch","then","response","json","data","Response","Search","setState","event","this","preventDefault","target","value","userId","database","ref","set","uid","newNominationList","push","splice","signInAnonymously","currentUser","on","snapshot","val","catch","error","errorCode","code","message","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65b48a0c.chunk.js","sourcesContent":["function MovieSearchForm(props) {\r\n    return (\r\n        <div className=\"MovieSearchForm\">\r\n            <form onSubmit={props.handleSubmit}> \r\n                <div>\r\n                    <label>{props.label}</label>\r\n                    <input id={props.id} type=\"text\" placeholder={props.placeholder} onChange={props.handleChange}/>\r\n                    <button type=\"submit\"><i className=\"fa fa-search\"></i></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default MovieSearchForm;","\r\nfunction Movie(props) {\r\n    const {title, year, posterUrl} = props;\r\n\r\n    let display = '';\r\n    if (props.addNewNomination) {\r\n        display = <button onClick={props.addNewNomination} disabled={props.disabled}>Nominate</button>;\r\n    }\r\n    else if(props.removeNomination){\r\n        display = <button onClick={props.removeNomination}>remove</button>\r\n    }\r\n    return(\r\n        <div className=\"Movie\">\r\n            {/* <img className=\"movie-poster\" src={posterUrl} alt=\"movie-poster\"/> */}\r\n            <p>{title} ({year})</p>\r\n            {display}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;","import Movie from './Movie';\r\n\r\nfunction MovieQueryResults(props) {\r\n    // displays the results of an api call\r\n    // takes an array of objects through dataList prop\r\n\r\n    return ( \r\n        <div className=\"MovieQueryResults\">\r\n            <p>Results for \"{props.searchTerm}\"</p>\r\n            {props.dataList.map((movie,i) => {\r\n\r\n                const title = movie.Title;\r\n                let found = false;\r\n\r\n                try {\r\n                    for (let i = 0; i < props.nList.length; i ++) {\r\n                        if (props.nList[i].Title === title) {\r\n                            found = true;\r\n                        }\r\n                    }\r\n                }\r\n                catch(err) {\r\n                    console.log(\"error: \", err);\r\n                }\r\n                \r\n                return (\r\n                    <Movie key={i} disabled={found} title={movie.Title} year={movie.Year} posterUrl={movie.Poster} addNewNomination={() => props.addNewNomination(movie)} />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieQueryResults;","\r\nimport Movie from './Movie';\r\n\r\nfunction UserNominations(props){\r\n    return (\r\n        <div className=\"UserNominations\">\r\n            <p>Nominations</p>\r\n            {props.dataList.map((movie,i) => {\r\n                return(\r\n                    <div>\r\n                        <Movie key={i} title={movie.Title} year={movie.Year} posterUrl={movie.Poster} removeNomination={() => props.removeNomination(movie)} />\r\n                    </div>\r\n                )\r\n            })}\r\n            <p>{ props.dataList.length > 0 ? \"\": \"Nothing to show at the moment...\"}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserNominations;","// firebase.js\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// Initialize Firebase\r\n// *** USE YOUR CONFIG OBJECT ***\r\nconst config = {\r\n  apiKey: \"AIzaSyDcmErYVL4B8Ez4pLIaX1JY5w_dh2I8XgQ\",\r\n  authDomain: \"the-shoppies-a6032.firebaseapp.com\",\r\n  databaseURL: \"https://the-shoppies-a6032-default-rtdb.firebaseio.com\",\r\n  projectId: \"the-shoppies-a6032\",\r\n  storageBucket: \"the-shoppies-a6032.appspot.com\",\r\n  messagingSenderId: \"1026405451711\",\r\n  appId: \"1:1026405451711:web:e34d7b5c6baf7168f4830a\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n// this exports the CONFIGURED version of firebase\r\nexport default firebase;","import { Component } from 'react';\nimport './App.css';\nimport MovieSearchForm from './MovieSearchForm.js';\nimport MovieQueryResults from './MovieQueryResults.js';\nimport UserNominations from './UserNominations.js';\nimport firebase from './firebase';\nimport 'firebase/auth';\nimport axios from 'axios';\n\nconst auth = firebase.auth();\n\nfunction callback(data) {\n  console.log(data);\n}\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      movieSearchInput: '',\n      movieList: [],\n      nominationList: [],\n      user: null, \n    };\n\n    this.handleInputSubmit = this.handleInputSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.movieSearchQuery = this.movieSearchQuery.bind(this);\n    this.writeUserData = this.writeUserData.bind(this);\n    this.anonSignIn = this.anonSignIn.bind(this);\n    this.addNewNomination = this.addNewNomination.bind(this);\n    this.removeNomination = this.removeNomination.bind(this);\n  }\n\n  movieSearchQuery(movieTitle) {\n    const endPoint = `https://www.omdbapi.com/?apikey=82a91ad2&s=${movieTitle}`;\n    const newEndPoint = `https://jsonp.afeld.me/?callback=?&url=${endPoint}`;\n\n    // fetch(newEndPoint).then(function(data) {\n    //   console.log(data);\n    // })\n\n    // axios({\n    //   method: 'get',\n    //   url: newEndPoint,\n    // }).then((res) => {\n    //   console.log(res);\n    // })\n\n    fetch(endPoint)\n    .then(response => response.json())\n    .then(data => {\n        if (data.Response === \"True\") {\n          let dataList = [...data.Search];\n          this.setState({\n            movieList: dataList,\n          });\n        }\n        else {\n          console.log(\"no data yet\");\n        }\n      }\n    );\n  }\n\n  handleInputSubmit(event) {\n    this.movieSearchQuery(this.state.movieSearchInput);\n    event.preventDefault();\n  }\n\n  handleInputChange(event) {\n    this.setState({movieSearchInput: event.target.value}, (() => {\n      this.movieSearchQuery(this.state.movieSearchInput);\n    }));\n  }\n\n  writeUserData(userId, nominationList) {\n    firebase.database().ref('users/' + userId).set({\n      uid: userId,\n      nominationList\n    })\n  }\n\n  addNewNomination(movie) {\n    let newNominationList = [...this.state.nominationList];\n    newNominationList.push(movie);\n    this.setState({\n      nominationList: newNominationList,\n    });\n\n    this.writeUserData(this.state.user.uid, newNominationList);\n\n  }\n\n  removeNomination(movie) {\n    // TODO: remove the movie from the current users nomination list in firebase \n\n    let newNominationList = [...this.state.nominationList];\n    let title = movie.Title;\n    let found = -1;\n\n    for (let i = 0; i < newNominationList.length; i ++) {\n      if (newNominationList[i].Title === title) {\n          found = i;\n      }\n    }\n\n    if (found > -1) {\n      newNominationList.splice(found,1);\n    }\n\n    this.setState({\n      nominationList: newNominationList\n    },() => {\n      this.writeUserData(this.state.user.uid, newNominationList);\n    });\n  }\n\n  async anonSignIn() {\n    if (!(this.state.user)) {\n      auth.signInAnonymously()\n      .then(() => {\n        this.setState({user: auth.currentUser}, function() {\n        });\n      }).then(() => {\n        let nominationListRef = firebase.database().ref('users/' + this.state.user.uid + '/nominationList');\n        nominationListRef.on('value', (snapshot) => {\n          const data = snapshot.val();\n          if (data) {\n            this.setState({nominationList: data});\n          }\n        });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode);\n      });\n    }\n  }\n  \n  componentDidMount() {\n    this.anonSignIn();\n  }\n\n  render() {\n\n    let display = 'banner banner-hide';\n    if (this.state.nominationList.length >= 5) {\n      display = 'banner banner-show';\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <h1>The Shoppies</h1>\n          <h2 className={display}> YOU HAVE 5 NOMINATIONS</h2>\n          <MovieSearchForm \n            label=\"Movie Title\" \n            placeholder=\"Search Movies\"\n            id=\"movie-input\" \n            handleSubmit={this.handleInputSubmit} \n            handleChange={this.handleInputChange}/>\n\n          <div className=\"flex-parent\">\n            <MovieQueryResults \n              dataList={this.state.movieList} \n              searchTerm={this.state.movieSearchInput} \n              addNewNomination={this.addNewNomination} \n              nList={this.state.nominationList}\n            />\n            <UserNominations \n              dataList={this.state.nominationList}\n              removeNomination={this.removeNomination}\n            /> \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}